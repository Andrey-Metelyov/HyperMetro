type: edu
files:
- name: src/Main.java
  visible: true
  text: |
    public class Main {

        public static void main(String[] args) {
            System.out.println("Hello, world!");
        }
    }
  learner_created: false
- name: test/Tests.java
  visible: false
  text: |-
    import org.hyperskill.hstest.dynamic.DynamicTest;
    import org.hyperskill.hstest.exception.outcomes.WrongAnswer;
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.CheckResult;
    import org.hyperskill.hstest.testing.TestedProgram;

    public class Tests extends StageTest<String> {
        // test from the previous stage with one line
        @DynamicTest(order = 1)
        CheckResult test1() {

            TestedProgram main = new TestedProgram();
            main.start("./test/baltimore.json");
            String output = main.execute("/output \"SubwayLink\"").trim();

            checkDepots(output);
            checkOutputLength(output, 16);
            assertStations(output, new String[]{"Owings Mills", "Old Court", "Milford Mill", "Reiserstown Plaza",
                "Rogers Avenue", "West Cold Spring", "Mondawmin", "Penn North", "Uptown", "State Center",
                "Lexington Market", "Charles Center", "Shot Tower/Market Place", "Johns Hopkins Hospital"});

            return CheckResult.correct();
        }

        // test of example
        @DynamicTest(order = 2)
        CheckResult test2() {

            TestedProgram main = new TestedProgram();
            main.start("./test/lausanne.json");
            String output = main.execute("/output \"m1\"").trim();

            checkDepots(output);
            checkOutputLength(output, 17);
            assertStations(output, new String[]{"Renes—Gare", "Epenex", "Crochy", "Cerisaie",
                "Bassenges", "EPFL", "UNL—Sorge", "Mouline", "UNL—Chemberonne", "Bourdonnette", "Melley",
                "Provence", "Montelly", "Vigie", "Lausanne—Flon"});

            output = main.execute("/output \"m2\"");
            checkDepots(output);
            checkOutputLength(output, 16);
            assertStations(output, new String[]{"Croisettes", "Vennes", "Fourmi", "Sallaz", "CHUV", "Ours",
                "Riponne M.Bejart", "Bessieres", "Lausanne—Flon", "Lausanne Gare CFF", "Grancy", "Delices", "Jourdils",
                "Ouchy—Olympique"});

            return CheckResult.correct();
        }

        // example test pt.2 (with addition)
        @DynamicTest(order = 3)
        CheckResult test2_1() {

            TestedProgram main = new TestedProgram();
            main.start("./test/lausanne.json");

            // added a station to the end of the line
            main.execute("/append \"m1\" \"Test station 1\"");
            String output = main.execute("/output \"m1\"");

            checkDepots(output);
            checkOutputLength(output, 18);
            assertStations(output, new String[]{"Renes—Gare", "Epenex", "Crochy", "Cerisaie",
                "Bassenges", "EPFL", "UNL—Sorge", "Mouline", "UNL—Chemberonne", "Bourdonnette", "Melley",
                "Provence", "Montelly", "Vigie", "Lausanne—Flon", "Test station 1"});

            // added another one
            main.execute("/append \"m1\" \"Test station 2\"");
            output = main.execute("/output \"m1\"");

            checkDepots(output);
            checkOutputLength(output, 19);
            assertStations(output, new String[]{"Renes—Gare", "Epenex", "Crochy", "Cerisaie",
                "Bassenges", "EPFL", "UNL—Sorge", "Mouline", "UNL—Chemberonne", "Bourdonnette", "Melley",
                "Provence", "Montelly", "Vigie", "Lausanne—Flon", "Test station 1", "Test station 2"});

            // added one station to the beginning of the line
            main.execute("/add-head \"m1\" \"Head\"");
            output = main.execute("/output \"m1\"");

            checkDepots(output);
            checkOutputLength(output, 20);
            assertStations(output, new String[]{"Head", "Renes—Gare", "Epenex", "Crochy", "Cerisaie",
                "Bassenges", "EPFL", "UNL—Sorge", "Mouline", "UNL—Chemberonne", "Bourdonnette", "Melley",
                "Provence", "Montelly", "Vigie", "Lausanne—Flon", "Test station 1", "Test station 2"});

            return CheckResult.correct();
        }

        // not existing file check
        @DynamicTest(order = 4)
        CheckResult test4() {
            TestedProgram main = new TestedProgram();
            String output = main.start("tHiS_fIlE_DoEs_nOt_ExIsT.txt");
            if (output.trim().length() == 0) {
                return CheckResult.wrong("The program did not print anything when the file was not exist. ");
            }
            if (output.toLowerCase().startsWith("depot") || output.toLowerCase().endsWith("depot")) {
                return CheckResult.wrong("It looks like the program did not print an error message when the file was not exist.");
            }
            return CheckResult.correct();
        }

        // test of a case from the example
        @DynamicTest(order = 5)
        CheckResult test5() {

            TestedProgram main = new TestedProgram();
            main.start("./test/prague.json");

            String[][] stations = new String[][]{
                {"Nemocnice Motol", null}, {"Petriny", null}, {"Nadrazi Veleslavin", null}, {"Borislavka", null},
                {"Dejvicka", null}, {"Hradcanska", null}, {"Malostranska", null}, {"Staromestska", null},
                {"Mustek", "Linka B"}, {"Muzeum", "Linka C"}, {"Namesti Miru", null}, {"Jiriho z Podebrad", null},
                {"Flora", null}, {"Zelivskeho", null}, {"Strasnicka", null}, {"Skalka", null}, {"Depo Hostivar", null}
            };

            String output = main.execute("/output \"Linka A\"");
            checkDepots(output);
            checkOutputLength(output, 19);
            assertWithTransfer(output, stations);

            return CheckResult.correct();
        }

        @DynamicTest(order = 6)
        CheckResult test6() {

            TestedProgram main = new TestedProgram();
            main.start("./test/prague.json");

            String[][] stations = new String[][]{{"Nemocnice Motol", null}, {"Petriny", "Linka C"},
                {"Nadrazi Veleslavin", null}, {"Borislavka", null}, {"Dejvicka", null}, {"Hradcanska", null},
                {"Malostranska", null}, {"Staromestska", null}, {"Mustek", "Linka B"}, {"Muzeum", "Linka C"},
                {"Namesti Miru", null}, {"Jiriho z Podebrad", null}, {"Flora", null}, {"Zelivskeho", null},
                {"Strasnicka", null}, {"Skalka", null}, {"Depo Hostivar", null}};

            main.execute("/connect \"Linka C\" \"I.P.Pavlova\" \"Linka A\" \"Petriny\"");

            String output = main.execute("/output \"Linka A\"");
            checkDepots(output);
            checkOutputLength(output, 19);
            assertWithTransfer(output, stations);

            return CheckResult.correct();
        }

        // checks for "depot" at the start and at the end
        void checkDepots(String output) {
            output = output.trim().toLowerCase();
            if (!output.startsWith("depot")) {
                throw new WrongAnswer("Your output should start with 'depot'.");
            } else if (!output.endsWith("depot")) {
                throw new WrongAnswer("Your output should end with 'depot'.");
            }
        }

        // checks number of stations in output
        void checkOutputLength(String output, int correctLength) {
            int length = output.trim().split("\n").length;
            if (length != correctLength) {
                throw new WrongAnswer("You output contains wrong number of lines.\n" +
                    "Expected: " + correctLength + " lines\n" +
                    "Your output: " + length + " lines");
            }
        }

        // checks stations
        void assertStations(String output, String[] stations) {

            String[] sOutput = output.trim().split("\n");

            for (int i = 0; i < stations.length; i++) {
                if (!sOutput[i + 1].equals(stations[i])) {
                    throw new WrongAnswer("Can't find station '" + stations[i] + "' in the line number " + (i + 2));
                }
            }
        }

        void assertWithTransfer(String output, String[][] stations) {

            String[] sOutput = output.split("\n");

            for (int i = 0; i < stations.length; i++) {
                String currentLine = sOutput[i + 1].toLowerCase().trim();
                String currentStation = stations[i][0];
                String currentTransfer = stations[i][1];
                if (currentTransfer == null) {
                    if (!currentLine.equals(currentStation.toLowerCase())) {
                        throw new WrongAnswer("There is an error in your program's reply. Some stations were not found.");
                    }
                } else if (!currentLine.contains(currentStation.toLowerCase()) ||
                    !currentLine.contains(currentTransfer.toLowerCase())) {
                    throw new WrongAnswer("Expected transfer to '" + currentTransfer + "' from '" + currentStation + "' station.");
                }
            }
        }
    }
  learner_created: false
- name: test/baltimore.json
  visible: false
  text: |-
    {
      "SubwayLink": {
        "1": {
          "name": "Owings Mills",
          "transfer": []
        },
        "2": {
          "name": "Old Court",
          "transfer": []
        },
        "3": {
          "name": "Milford Mill",
          "transfer": []
        },
        "4": {
          "name": "Reiserstown Plaza",
          "transfer": []
        },
        "5": {
          "name": "Rogers Avenue",
          "transfer": []
        },
        "6": {
          "name": "West Cold Spring",
          "transfer": []
        },
        "7": {
          "name": "Mondawmin",
          "transfer": []
        },
        "8": {
          "name": "Penn North",
          "transfer": []
        },
        "9": {
          "name": "Uptown",
          "transfer": []
        },
        "10": {
          "name": "State Center",
          "transfer": []
        },
        "11": {
          "name": "Lexington Market",
          "transfer": []
        },
        "12": {
          "name": "Charles Center",
          "transfer": []
        },
        "13": {
          "name": "Shot Tower/Market Place",
          "transfer": []
        },
        "14": {
          "name": "Johns Hopkins Hospital",
          "transfer": []
        }
      }
    }
  learner_created: false
- name: test/lausanne.json
  visible: false
  text: |-
    {
      "m1": {
        "1": {
          "name": "Renes—Gare",
          "transfer": []
        },
        "2": {
          "name": "Epenex",
          "transfer": []
        },
        "3": {
          "name": "Crochy",
          "transfer": []
        },
        "4": {
          "name": "Cerisaie",
          "transfer": []
        },
        "5": {
          "name": "Bassenges",
          "transfer": []
        },
        "6": {
          "name": "EPFL",
          "transfer": []
        },
        "7": {
          "name": "UNL—Sorge",
          "transfer": []
        },
        "8": {
          "name": "Mouline",
          "transfer": []
        },
        "9": {
          "name": "UNL—Chemberonne",
          "transfer": []
        },
        "10": {
          "name": "Bourdonnette",
          "transfer": []
        },
        "11": {
          "name": "Melley",
          "transfer": []
        },
        "12": {
          "name": "Provence",
          "transfer": []
        },
        "13": {
          "name": "Montelly",
          "transfer": []
        },
        "14": {
          "name": "Vigie",
          "transfer": []
        },
        "15": {
          "name": "Lausanne—Flon",
          "transfer": []
        }
      },
      "m2": {
        "1": {
          "name": "Croisettes",
          "transfer": []
        },
        "2": {
          "name": "Vennes",
          "transfer": []
        },
        "3": {
          "name": "Fourmi",
          "transfer": []
        },
        "4": {
          "name": "Sallaz",
          "transfer": []
        },
        "5": {
          "name": "CHUV",
          "transfer": []
        },
        "6": {
          "name": "Ours",
          "transfer": []
        },
        "7": {
          "name": "Riponne M.Bejart",
          "transfer": []
        },
        "8": {
          "name": "Bessieres",
          "transfer": []
        },
        "9": {
          "name": "Lausanne—Flon",
          "transfer": []
        },
        "10": {
          "name": "Lausanne Gare CFF",
          "transfer": []
        },
        "11": {
          "name": "Grancy",
          "transfer": []
        },
        "12": {
          "name": "Delices",
          "transfer": []
        },
        "13": {
          "name": "Jourdils",
          "transfer": []
        },
        "14": {
          "name": "Ouchy—Olympique",
          "transfer": []
        }
      }
    }
  learner_created: false
- name: src/Station.java
  visible: true
  learner_created: true
- name: test/prague.json
  visible: false
  text: |-
    {
      "Linka A": {
        "1": {
          "name": "Nemocnice Motol",
          "transfer": []
        },
        "2": {
          "name": "Petriny",
          "transfer": []
        },
        "3": {
          "name": "Nadrazi Veleslavin",
          "transfer": []
        },
        "4": {
          "name": "Borislavka",
          "transfer": []
        },
        "5": {
          "name": "Dejvicka",
          "transfer": []
        },
        "6": {
          "name": "Hradcanska",
          "transfer": []
        },
        "7": {
          "name": "Malostranska",
          "transfer": []
        },
        "8": {
          "name": "Staromestska",
          "transfer": []
        },
        "9": {
          "name": "Mustek",
          "transfer": [
            {
              "line": "Linka B",
              "station": "Mustek"
            }
          ]
        },
        "10": {
          "name": "Muzeum",
          "transfer": [
            {
              "line": "Linka C",
              "station": "Muzeum"
            }
          ]
        },
        "11": {
          "name": "Namesti Miru",
          "transfer": []
        },
        "12": {
          "name": "Jiriho z Podebrad",
          "transfer": []
        },
        "13": {
          "name": "Flora",
          "transfer": []
        },
        "14": {
          "name": "Zelivskeho",
          "transfer": []
        },
        "15": {
          "name": "Strasnicka",
          "transfer": []
        },
        "16": {
          "name": "Skalka",
          "transfer": []
        },
        "17": {
          "name": "Depo Hostivar",
          "transfer": []
        }
      },
      "Linka B": {
        "1": {
          "name": "Cerny Most",
          "transfer": []
        },
        "2": {
          "name": "Rajska zahrada",
          "transfer": []
        },
        "3": {
          "name": "Hloubetin",
          "transfer": []
        },
        "4": {
          "name": "Kolbenova",
          "transfer": []
        },
        "5": {
          "name": "Vysocanska",
          "transfer": []
        },
        "6": {
          "name": "Ceskomoravska",
          "transfer": []
        },
        "7": {
          "name": "Palmovka",
          "transfer": []
        },
        "8": {
          "name": "Invalidovna",
          "transfer": []
        },
        "9": {
          "name": "Krizikova",
          "transfer": []
        },
        "10": {
          "name": "Florenc",
          "transfer": [
            {
              "line": "Linka C",
              "station": "Florenc"
            }
          ]
        },
        "11": {
          "name": "Namesti Republiky",
          "transfer": []
        },
        "12": {
          "name": "Mustek",
          "transfer": [
            {
              "line": "Linka B",
              "station": "Mustek"
            }
          ]
        },
        "13": {
          "name": "Narodni trida",
          "transfer": []
        },
        "14": {
          "name": "Karlovo namesti",
          "transfer": []
        },
        "15": {
          "name": "Andel",
          "transfer": []
        },
        "16": {
          "name": "Smichovske nadrazi",
          "transfer": []
        },
        "17": {
          "name": "Radlicka",
          "transfer": []
        },
        "18": {
          "name": "Jinonice",
          "transfer": []
        },
        "19": {
          "name": "Nove Butovice",
          "transfer": []
        },
        "20": {
          "name": "Hurka",
          "transfer": []
        },
        "21": {
          "name": "Luziny",
          "transfer": []
        },
        "22": {
          "name": "Luka",
          "transfer": []
        },
        "23": {
          "name": "Stodulky",
          "transfer": []
        },
        "24": {
          "name": "Zlicin",
          "transfer": []
        }
      },
      "Linka C": {
        "1": {
          "name": "Letnany",
          "transfer": []
        },
        "2": {
          "name": "Prosek",
          "transfer": []
        },
        "3": {
          "name": "Strizkov",
          "transfer": []
        },
        "4": {
          "name": "Ladvi",
          "transfer": []
        },
        "5": {
          "name": "Kobylisy",
          "transfer": []
        },
        "6": {
          "name": "Nadrazi Holesovice",
          "transfer": []
        },
        "7": {
          "name": "Vltavska",
          "transfer": []
        },
        "8": {
          "name": "Florenc",
          "transfer": [
            {
              "line": "Linka B",
              "station": "Florenc"
            }
          ]
        },
        "9": {
          "name": "Hlavni nadrazi",
          "transfer": []
        },
        "10": {
          "name": "Muzeum",
          "transfer": [
            {
              "line": "Linka A",
              "station": "Muzeum"
            }
          ]
        },
        "11": {
          "name": "I.P.Pavlova",
          "transfer": []
        },
        "12": {
          "name": "Vysehrad",
          "transfer": []
        },
        "13": {
          "name": "Prazskeho povstani",
          "transfer": []
        },
        "14": {
          "name": "Pankrac",
          "transfer": []
        },
        "15": {
          "name": "Budejovicka",
          "transfer": []
        },
        "16": {
          "name": "Kacerov",
          "transfer": []
        },
        "17": {
          "name": "Roztyly",
          "transfer": []
        },
        "18": {
          "name": "Chodov",
          "transfer": []
        },
        "19": {
          "name": "Opatov",
          "transfer": []
        },
        "20": {
          "name": "Haje",
          "transfer": []
        }
      }
    }
  learner_created: false
- name: src/Metro/Metro.java
  visible: true
  learner_created: true
- name: src/Metro/MetroLine.java
  visible: true
  learner_created: true
- name: src/Metro/Station.java
  visible: true
  learner_created: true
- name: src/Metro/TransferStation.java
  visible: true
  learner_created: true
- name: src/Metro/AlphanumComparator.java
  visible: true
  learner_created: true
feedback_link: https://hyperskill.org/projects/120/stages/650/implement#comment
status: Failed
feedback:
  message: |-
    Wrong answer in test #5

    Expected transfer to &#39;Linka B&#39; from &#39;Mustek&#39; station.

    Please find below the output of your program during this failed test.
    Note that the &#39;&gt;&#39; character indicates the beginning of the input line.

    ---

    Arguments: ./test/prague.json

    stdout:
    &gt; /output &quot;Linka A&quot;
    depot
    Nemocnice Motol
    Petriny
    Nadrazi Veleslavin
    Borislavka
    Dejvicka
    Hradcanska
    Malostranska
    Staromestska
    Mustek
    Muzeum
    Namesti Miru
    Jiriho z Podebrad
    Flora
    Zelivskeho
    Strasnicka
    Skalka
    Depo Hostivar
    depot

    stderr:
    [last 250 lines of output are shown, 100 skipped]
        &quot;5&quot;: {
          &quot;name&quot;: &quot;Vysocanska&quot;,
          &quot;transfer&quot;: []
        },
        &quot;6&quot;: {
          &quot;name&quot;: &quot;Ceskomoravska&quot;,
          &quot;transfer&quot;: []
        },
        &quot;7&quot;: {
          &quot;name&quot;: &quot;Palmovka&quot;,
          &quot;transfer&quot;: []
        },
        &quot;8&quot;: {
          &quot;name&quot;: &quot;Invalidovna&quot;,
          &quot;transfer&quot;: []
        },
        &quot;9&quot;: {
          &quot;name&quot;: &quot;Krizikova&quot;,
          &quot;transfer&quot;: []
        },
        &quot;10&quot;: {
          &quot;name&quot;: &quot;Florenc&quot;,
          &quot;transfer&quot;: [
            {
              &quot;line&quot;: &quot;Linka C&quot;,
              &quot;station&quot;: &quot;Florenc&quot;
            }
          ]
        },
        &quot;11&quot;: {
          &quot;name&quot;: &quot;Namesti Republiky&quot;,
          &quot;transfer&quot;: []
        },
        &quot;12&quot;: {
          &quot;name&quot;: &quot;Mustek&quot;,
          &quot;transfer&quot;: [
            {
              &quot;line&quot;: &quot;Linka B&quot;,
              &quot;station&quot;: &quot;Mustek&quot;
            }
          ]
        },
        &quot;13&quot;: {
          &quot;name&quot;: &quot;Narodni trida&quot;,
          &quot;transfer&quot;: []
        },
        &quot;14&quot;: {
          &quot;name&quot;: &quot;Karlovo namesti&quot;,
          &quot;transfer&quot;: []
        },
        &quot;15&quot;: {
          &quot;name&quot;: &quot;Andel&quot;,
          &quot;transfer&quot;: []
        },
        &quot;16&quot;: {
          &quot;name&quot;: &quot;Smichovske nadrazi&quot;,
          &quot;transfer&quot;: []
        },
        &quot;17&quot;: {
          &quot;name&quot;: &quot;Radlicka&quot;,
          &quot;transfer&quot;: []
        },
        &quot;18&quot;: {
          &quot;name&quot;: &quot;Jinonice&quot;,
          &quot;transfer&quot;: []
        },
        &quot;19&quot;: {
          &quot;name&quot;: &quot;Nove Butovice&quot;,
          &quot;transfer&quot;: []
        },
        &quot;20&quot;: {
          &quot;name&quot;: &quot;Hurka&quot;,
          &quot;transfer&quot;: []
        },
        &quot;21&quot;: {
          &quot;name&quot;: &quot;Luziny&quot;,
          &quot;transfer&quot;: []
        },
        &quot;22&quot;: {
          &quot;name&quot;: &quot;Luka&quot;,
          &quot;transfer&quot;: []
        },
        &quot;23&quot;: {
          &quot;name&quot;: &quot;Stodulky&quot;,
          &quot;transfer&quot;: []
        },
        &quot;24&quot;: {
          &quot;name&quot;: &quot;Zlicin&quot;,
          &quot;transfer&quot;: []
        }
      },
      &quot;Linka C&quot;: {
        &quot;1&quot;: {
          &quot;name&quot;: &quot;Letnany&quot;,
          &quot;transfer&quot;: []
        },
        &quot;2&quot;: {
          &quot;name&quot;: &quot;Prosek&quot;,
          &quot;transfer&quot;: []
        },
        &quot;3&quot;: {
          &quot;name&quot;: &quot;Strizkov&quot;,
          &quot;transfer&quot;: []
        },
        &quot;4&quot;: {
          &quot;name&quot;: &quot;Ladvi&quot;,
          &quot;transfer&quot;: []
        },
        &quot;5&quot;: {
          &quot;name&quot;: &quot;Kobylisy&quot;,
          &quot;transfer&quot;: []
        },
        &quot;6&quot;: {
          &quot;name&quot;: &quot;Nadrazi Holesovice&quot;,
          &quot;transfer&quot;: []
        },
        &quot;7&quot;: {
          &quot;name&quot;: &quot;Vltavska&quot;,
          &quot;transfer&quot;: []
        },
        &quot;8&quot;: {
          &quot;name&quot;: &quot;Florenc&quot;,
          &quot;transfer&quot;: [
            {
              &quot;line&quot;: &quot;Linka B&quot;,
              &quot;station&quot;: &quot;Florenc&quot;
            }
          ]
        },
        &quot;9&quot;: {
          &quot;name&quot;: &quot;Hlavni nadrazi&quot;,
          &quot;transfer&quot;: []
        },
        &quot;10&quot;: {
          &quot;name&quot;: &quot;Muzeum&quot;,
          &quot;transfer&quot;: [
            {
              &quot;line&quot;: &quot;Linka A&quot;,
              &quot;station&quot;: &quot;Muzeum&quot;
            }
          ]
        },
        &quot;11&quot;: {
          &quot;name&quot;: &quot;I.P.Pavlova&quot;,
          &quot;transfer&quot;: []
        },
        &quot;12&quot;: {
          &quot;name&quot;: &quot;Vysehrad&quot;,
          &quot;transfer&quot;: []
        },
        &quot;13&quot;: {
          &quot;name&quot;: &quot;Prazskeho povstani&quot;,
          &quot;transfer&quot;: []
        },
        &quot;14&quot;: {
          &quot;name&quot;: &quot;Pankrac&quot;,
          &quot;transfer&quot;: []
        },
        &quot;15&quot;: {
          &quot;name&quot;: &quot;Budejovicka&quot;,
          &quot;transfer&quot;: []
        },
        &quot;16&quot;: {
          &quot;name&quot;: &quot;Kacerov&quot;,
          &quot;transfer&quot;: []
        },
        &quot;17&quot;: {
          &quot;name&quot;: &quot;Roztyly&quot;,
          &quot;transfer&quot;: []
        },
        &quot;18&quot;: {
          &quot;name&quot;: &quot;Chodov&quot;,
          &quot;transfer&quot;: []
        },
        &quot;19&quot;: {
          &quot;name&quot;: &quot;Opatov&quot;,
          &quot;transfer&quot;: []
        },
        &quot;20&quot;: {
          &quot;name&quot;: &quot;Haje&quot;,
          &quot;transfer&quot;: []
        }
      }
    }
    Metro{metroLines=[MetroLine{name=&#39;Linka A&#39;, stations={11=Station{name=&#39;Namesti Miru&#39;, transfer=[]}
    , 12=Station{name=&#39;Jiriho z Podebrad&#39;, transfer=[]}
    , 13=Station{name=&#39;Flora&#39;, transfer=[]}
    , 14=Station{name=&#39;Zelivskeho&#39;, transfer=[]}
    , 15=Station{name=&#39;Strasnicka&#39;, transfer=[]}
    , 16=Station{name=&#39;Skalka&#39;, transfer=[]}
    , 17=Station{name=&#39;Depo Hostivar&#39;, transfer=[]}
    , 1=Station{name=&#39;Nemocnice Motol&#39;, transfer=[]}
    , 2=Station{name=&#39;Petriny&#39;, transfer=[]}
    , 3=Station{name=&#39;Nadrazi Veleslavin&#39;, transfer=[]}
    , 4=Station{name=&#39;Borislavka&#39;, transfer=[]}
    , 5=Station{name=&#39;Dejvicka&#39;, transfer=[]}
    , 6=Station{name=&#39;Hradcanska&#39;, transfer=[]}
    , 7=Station{name=&#39;Malostranska&#39;, transfer=[]}
    , 8=Station{name=&#39;Staromestska&#39;, transfer=[]}
    , 9=Station{name=&#39;Mustek&#39;, transfer=[TransferStation{line=&#39;Linka B&#39;, station=&#39;Mustek&#39;}]}
    , 10=Station{name=&#39;Muzeum&#39;, transfer=[TransferStation{line=&#39;Linka C&#39;, station=&#39;Muzeum&#39;}]}
    }}
    , MetroLine{name=&#39;Linka B&#39;, stations={11=Station{name=&#39;Namesti Republiky&#39;, transfer=[]}
    , 22=Station{name=&#39;Luka&#39;, transfer=[]}
    , 12=Station{name=&#39;Mustek&#39;, transfer=[TransferStation{line=&#39;Linka B&#39;, station=&#39;Mustek&#39;}]}
    , 23=Station{name=&#39;Stodulky&#39;, transfer=[]}
    , 13=Station{name=&#39;Narodni trida&#39;, transfer=[]}
    , 24=Station{name=&#39;Zlicin&#39;, transfer=[]}
    , 14=Station{name=&#39;Karlovo namesti&#39;, transfer=[]}
    , 15=Station{name=&#39;Andel&#39;, transfer=[]}
    , 16=Station{name=&#39;Smichovske nadrazi&#39;, transfer=[]}
    , 17=Station{name=&#39;Radlicka&#39;, transfer=[]}
    , 18=Station{name=&#39;Jinonice&#39;, transfer=[]}
    , 19=Station{name=&#39;Nove Butovice&#39;, transfer=[]}
    , 1=Station{name=&#39;Cerny Most&#39;, transfer=[]}
    , 2=Station{name=&#39;Rajska zahrada&#39;, transfer=[]}
    , 3=Station{name=&#39;Hloubetin&#39;, transfer=[]}
    , 4=Station{name=&#39;Kolbenova&#39;, transfer=[]}
    , 5=Station{name=&#39;Vysocanska&#39;, transfer=[]}
    , 6=Station{name=&#39;Ceskomoravska&#39;, transfer=[]}
    , 7=Station{name=&#39;Palmovka&#39;, transfer=[]}
    , 8=Station{name=&#39;Invalidovna&#39;, transfer=[]}
    , 9=Station{name=&#39;Krizikova&#39;, transfer=[]}
    , 20=Station{name=&#39;Hurka&#39;, transfer=[]}
    , 10=Station{name=&#39;Florenc&#39;, transfer=[TransferStation{line=&#39;Linka C&#39;, station=&#39;Florenc&#39;}]}
    , 21=Station{name=&#39;Luziny&#39;, transfer=[]}
    }}
    , MetroLine{name=&#39;Linka C&#39;, stations={11=Station{name=&#39;I.P.Pavlova&#39;, transfer=[]}
    , 12=Station{name=&#39;Vysehrad&#39;, transfer=[]}
    , 13=Station{name=&#39;Prazskeho povstani&#39;, transfer=[]}
    , 14=Station{name=&#39;Pankrac&#39;, transfer=[]}
    , 15=Station{name=&#39;Budejovicka&#39;, transfer=[]}
    , 16=Station{name=&#39;Kacerov&#39;, transfer=[]}
    , 17=Station{name=&#39;Roztyly&#39;, transfer=[]}
    , 18=Station{name=&#39;Chodov&#39;, transfer=[]}
    , 19=Station{name=&#39;Opatov&#39;, transfer=[]}
    , 1=Station{name=&#39;Letnany&#39;, transfer=[]}
    , 2=Station{name=&#39;Prosek&#39;, transfer=[]}
    , 3=Station{name=&#39;Strizkov&#39;, transfer=[]}
    , 4=Station{name=&#39;Ladvi&#39;, transfer=[]}
    , 5=Station{name=&#39;Kobylisy&#39;, transfer=[]}
    , 6=Station{name=&#39;Nadrazi Holesovice&#39;, transfer=[]}
    , 7=Station{name=&#39;Vltavska&#39;, transfer=[]}
    , 8=Station{name=&#39;Florenc&#39;, transfer=[TransferStation{line=&#39;Linka B&#39;, station=&#39;Florenc&#39;}]}
    , 9=Station{name=&#39;Hlavni nadrazi&#39;, transfer=[]}
    , 20=Station{name=&#39;Haje&#39;, transfer=[]}
    , 10=Station{name=&#39;Muzeum&#39;, transfer=[TransferStation{line=&#39;Linka A&#39;, station=&#39;Muzeum&#39;}]}
    }}
    ]}
    getLine(Linka A)
  time: Fri, 27 Aug 2021 04:06:57 UTC
record: 2
